// Mocks generated by Mockito 5.4.6 from annotations
// in restaurant_app/test/mock/api_restaurant_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_app/data/interface/i_api_restaurant.dart' as _i3;
import 'package:restaurant_app/data/models/list_restaurant_response.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeListRestaurantResponse_0 extends _i1.SmartFake
    implements _i2.ListRestaurantResponse {
  _FakeListRestaurantResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [IApiRestaurant].
///
/// See the documentation for Mockito's code generation for more information.
class MockIApiRestaurant extends _i1.Mock implements _i3.IApiRestaurant {
  MockIApiRestaurant() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ListRestaurantResponse> fetchListRestaurant() =>
      (super.noSuchMethod(
            Invocation.method(#fetchListRestaurant, []),
            returnValue: _i4.Future<_i2.ListRestaurantResponse>.value(
              _FakeListRestaurantResponse_0(
                this,
                Invocation.method(#fetchListRestaurant, []),
              ),
            ),
          )
          as _i4.Future<_i2.ListRestaurantResponse>);

  @override
  _i4.Future<_i2.ListRestaurantResponse> fetchSearchRestaurant({
    required String? query,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSearchRestaurant, [], {#query: query}),
            returnValue: _i4.Future<_i2.ListRestaurantResponse>.value(
              _FakeListRestaurantResponse_0(
                this,
                Invocation.method(#fetchSearchRestaurant, [], {#query: query}),
              ),
            ),
          )
          as _i4.Future<_i2.ListRestaurantResponse>);
}
